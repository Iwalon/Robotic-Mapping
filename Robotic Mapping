// C++ code
//
#include <Servo.h>

int Distance = 0;

int Distance2 = 0;

int Distance_x = 0;

int Angle = 0;

long readUltrasonicDistance(int triggerPin, int echoPin)
{
  pinMode(triggerPin, OUTPUT);  // Clear the trigger
  digitalWrite(triggerPin, LOW);
  delayMicroseconds(2);
  // Sets the trigger pin to HIGH state for 10 microseconds
  digitalWrite(triggerPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(triggerPin, LOW);
  pinMode(echoPin, INPUT);
  // Reads the echo pin, and returns the sound wave travel time in microseconds
  return pulseIn(echoPin, HIGH);
}

Servo servo_4;

void setup()
{
  servo_4.attach(4, 500, 2500);
  Serial.begin(9600);

  Distance = 0;
  Angle = 0;
}

void loop()
{
  for (Angle = 0; Angle <= 180; Angle += 1) {
    Distance = 0.006783 * readUltrasonicDistance(2, 3);
    servo_4.write(Angle);
    Distance2 = 0.006783 * readUltrasonicDistance(2, 3);
    Distance_x = sqrt(((pow(Distance, 2) + pow(Distance2, 2)) - (2 * (Distance * Distance2)) * cos(Angle)));
    Serial.println(Distance_x);
  }
  for (Angle = 180; Angle >= 0; Angle -= 1) {
    Distance = 0.006783 * readUltrasonicDistance(2, 3);
    servo_4.write(Angle);
    Distance2 = 0.006783 * readUltrasonicDistance(2, 3);
    Distance_x = sqrt(((pow(Distance, 2) + pow(Distance2, 2)) - (2 * (Distance * Distance2)) * cos(Angle)));
    Serial.println(Distance_x);
  }
  delay(10); // Delay a little bit to improve simulation performance
}
